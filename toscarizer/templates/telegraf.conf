[agent]
  ## Default data collection interval for all inputs
  interval = "2s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = false

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "200ms"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Log at debug level.
  #debug = true
  ## Log only error level messages.
  quiet = false

  ## Override default hostname, if empty use os.Hostname()
  hostname = "Lambda"

# Read metrics about memory usage
[[inputs.mem]]
  # no configuration

[[inputs.socket_listener]]
  service_address = "udp://:8094"
  data_format = "influx"

[[outputs.influxdb_v2]]
  urls = ["$INFLUX_ENDPOINT"]
  token = "$INFLUX_TOKEN"
  organization = "aisprint"
  bucket = "bucket"
